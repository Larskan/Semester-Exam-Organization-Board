{
	"info": {
		"_postman_id": "7150ada1-c934-4313-9c42-18eebe184c8a",
		"name": "Login Flow Automation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43461822",
		"_collection_link": "https://niels-2579828.postman.co/workspace/Niels's-Workspace~42bb2165-c09d-4acc-8d9a-814cb5b2ee3c/collection/43461822-7150ada1-c934-4313-9c42-18eebe184c8a?action=share&source=collection_link&creator=43461822"
	},
	"item": [
		{
			"name": "1. Get Public Key",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"✅ Public key should be retrieved successfully\", function () {",
							"    pm.response.to.have.status(200);",
							"    const json = pm.response.json();",
							"    pm.expect(json.publicKey).to.exist;",
							"",
							"    // Escape newline characters",
							"    const escapedPublicKey = json.publicKey.replace(/\\r?\\n/g, \"\\\\n\");",
							"    pm.collectionVariables.set(\"publicKey\", escapedPublicKey);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.unset(\"publicKey\");\r",
							"pm.collectionVariables.unset(\"encryptedPassword\");\r",
							"pm.collectionVariables.unset(\"jwtToken\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/Login/public-key",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"Login",
						"public-key"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. Encrypt Password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"✅ Password encrypted\", function () {",
							"    pm.response.to.have.status(200);",
							"    const json = pm.response.json();",
							"    pm.expect(json.encrypted).to.exist;",
							"    pm.collectionVariables.set(\"encryptedPassword\", json.encrypted);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const key = pm.collectionVariables.get(\"publicKey\");\r",
							"pm.variables.set(\"passwordToEncrypt\", \"1234\");\r",
							"\r",
							"if (!key) {\r",
							"    console.warn(\"No public key available\");\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"password\": \"{{passwordToEncrypt}}\",\r\n    \"publicKeyPem\": \"{{publicKey}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/Login/EncryptPasswordBummyForWebsideResponsabilety",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"Login",
						"EncryptPasswordBummyForWebsideResponsabilety"
					]
				}
			},
			"response": []
		},
		{
			"name": "3. Login, Email And Password Valid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"✅ Login successful\", function () {",
							"    pm.response.to.have.status(200);",
							"    const json = pm.response.json();",
							"    pm.expect(json.token).to.exist;",
							"    pm.collectionVariables.set(\"jwtToken\", json.token);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"Mail1@example.com\",\n  \"password\": \"{{encryptedPassword}}\"\n}"
				},
				"url": {
					"raw": "http://localhost:8080/api/Login/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"Login",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "3. Login, Email Invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"❌ Invalid email format caught\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"Mail1\",\n  \"password\": \"{{encryptedPassword}}\"\n}"
				},
				"url": {
					"raw": "http://localhost:8080/api/Login/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"Login",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "3. Login, Password Invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"❌ Invalid email format caught\", function () {",
							"    pm.response.to.have.status(500);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"Mail1@example.com\",\n  \"password\": \"1234\"\n}"
				},
				"url": {
					"raw": "http://localhost:8080/api/Login/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"Login",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "4. CreateAccountAndOrg, Email and password Valid",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function generateRandomString(length = 8) {\r",
							"    const chars = 'abcdefghijklmnopqrstuvwxyz0123456789';\r",
							"    return Array.from({length}, () => chars[Math.floor(Math.random() * chars.length)]).join('');\r",
							"}\r",
							"\r",
							"const randomString = generateRandomString();\r",
							"const email = `test_${randomString}@example.com`;\r",
							"const org = `Org_${generateRandomString(10)}`;\r",
							"\r",
							"pm.collectionVariables.set(\"randomEmail\", email);\r",
							"pm.collectionVariables.set(\"randomOrg\", org);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"✅ Account and org created\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"{{randomEmail}}\",\r\n  \"password\": \"Abcdef1!\",\r\n  \"orgName\": \"{{randomOrg}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/Login/AccountAndOrgCreation",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"Login",
						"AccountAndOrgCreation"
					]
				}
			},
			"response": []
		},
		{
			"name": "4. CreateAccountAndOrg, Password invalid format",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"❌ Invalid email format caught\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"test@example.com\",\r\n  \"password\": \"abc\",\r\n  \"orgName\": \"TestOrg\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/Login/AccountAndOrgCreation",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"Login",
						"AccountAndOrgCreation"
					]
				}
			},
			"response": []
		},
		{
			"name": "4. CreateAccountAndOrg, Emaile Format Invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"❌ Invalid email format caught\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"dfgdfg\",\r\n  \"password\": \"Jan123!\",\r\n  \"orgName\": \"TestOrg\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/Login/AccountAndOrgCreation",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"Login",
						"AccountAndOrgCreation"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "publicKey",
			"value": ""
		},
		{
			"key": "encryptedPassword",
			"value": ""
		},
		{
			"key": "jwtToken",
			"value": ""
		},
		{
			"key": "randomEmail",
			"value": ""
		},
		{
			"key": "randomOrg",
			"value": ""
		}
	]
}